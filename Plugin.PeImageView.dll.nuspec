<?xml version="1.0" encoding="utf-8"?>
<package>
	<metadata>
		<id>AlphaOmega.SAL.Plugin.PeImageView</id>
		<version>0.0.0.0</version>
		<authors>DKorablin</authors>
		<license type="expression">Apache-1.0</license>
		<readme>docs\README.md</readme>
		<requireLicenseAcceptance>false</requireLicenseAcceptance>
		<projectUrl>https://dkorablin.ru/project/Default.aspx?File=89</projectUrl>
		<repository type="git" url="https://github.com/DKorablin/Plugin.PeImageView" />
		<description>The history of origin began with the fact that I greatly bred DAL and BLL used in different projects. And at one fine moment, it became interesting to me whether a specific method is used or not used in child projects, or it can be safely deleted without notifying anyone. The first version searched through reflection and loading through memory. But you can read about the limitations of different search methods through reflection in description of different plugin loading providers. As a result, I had to dig to PE and CLI...</description>
		<releaseNotes></releaseNotes>
		<copyright>Danila Korablin</copyright>
		<tags>SAL,Plugin</tags>
		<dependencies>
			<group targetFramework="net20">
				<dependency id="SAL.Flatbed" version="1.2.9" />
				<dependency id="SAL.Windows" version="1.2.9" />
				<dependency id="AlphaOmega.PEReader" version="1.3.4" />
			</group>
		</dependencies>
	</metadata>
	<files>
		<file src="readme.md" target="docs" />
		<!--file src="bin\net20\Plugin.PeImageView.xml" target="xml" /-->
		<file src="bin\net20\Plugin.PeImageView.dll" target="lib\net20" />
	</files>
</package>